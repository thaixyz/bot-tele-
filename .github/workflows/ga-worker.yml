name: GitHub Actions Worker
on:
  workflow_dispatch:
    inputs:
      count:
        description: 'Number of workers (max 100)'
        required: true
        default: '50'
      minutes:
        description: 'Run duration in minutes'
        required: true
        default: '2'
      parallel:
        description: 'Number of parallel jobs (max 100)'
        required: true
        default: '50'
      payload:
        description: 'Payload for worker'
        required: true

jobs:
  worker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        worker_id: ${{ fromJSON(format('[{0}]', join(range(1, fromJSON(inputs.count) | min(100) + 1), ','))) }}
      max-parallel: ${{ fromJSON(inputs.parallel) | min(100) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyTelegramBotAPI psutil requests

      - name: Prepare proxy file
        run: |
          echo "Attempting to fetch proxy.txt from ${{ secrets.PROXY_SOURCE_URL || 'https://example.com/proxy.txt' }}"
          curl -o proxy.txt ${{ secrets.PROXY_SOURCE_URL || 'https://example.com/proxy.txt' }} || {
            echo "Fetch failed, using default or existing proxy.txt"
            touch proxy.txt
          }
          [ -f proxy.txt ] && echo "proxy.txt ready, size: $(stat -c%s proxy.txt) bytes" || echo "proxy.txt not available"

      - name: Execute worker
        env:
          PAYLOAD: ${{ inputs.payload }}
          WORKER_ID: ${{ matrix.worker_id }}
        run: |
          echo "Launching worker $WORKER_ID with payload: $PAYLOAD"
          python vps_worker.py "$PAYLOAD" --worker-id $WORKER_ID || {
            echo "Worker $WORKER_ID encountered an issue"
            cat vps_worker.log 2>/dev/null || echo "No worker log available"
          }
        timeout-minutes: ${{ fromJSON(inputs.minutes) }}
